version: 2
jobs:
  test-3.11:
    docker:
    - image: cimg/python:3.11
      environment:
        PIPENV_VENV_IN_PROJECT: true
    steps:
    - checkout
    - restore_cache:
        name: Restoring Pip Cache
        keys:
        - pip-cache-v11-cimg/python:3.11-{{ checksum "setup.py" }}
        - pip-cache-v11-cimg/python:3.11-
    - run:
        name: Running tests
        command: |
          python --version
          mkdir test-reports || true
          pip install . --user
          pip install .\[dataframe\] --user
          pip install .\[test\] --user
          pytest -m "not integration" tests --junitxml=test-reports/junit.xml --cov=./influxdb_client_3 --cov-report xml:coverage.xml
    - save_cache:
        name: Saving Pip Cache
        key: pip-cache-v11-cimg/python:3.11-{{ checksum "setup.py" }}
        paths:
        - .venv
        - ~/.cache/pip
        - /usr/local/lib/site-python
        when: always
    - store_test_results:
        path: test-reports
    - run:
        name: Collecting coverage reports
        command: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
          curl -s https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
          gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
          shasum -a 256 -c codecov.SHA256SUM
          chmod +x ./codecov
          ./codecov
  test-3.8:
    docker:
    - image: cimg/python:3.8
      environment:
        PIPENV_VENV_IN_PROJECT: true
    steps:
    - checkout
    - restore_cache:
        name: Restoring Pip Cache
        keys:
        - pip-cache-v11-cimg/python:3.8-{{ checksum "setup.py" }}
        - pip-cache-v11-cimg/python:3.8-
    - run:
        name: Running tests
        command: |
          python --version
          mkdir test-reports || true
          pip install . --user
          pip install .\[dataframe\] --user
          pip install .\[test\] --user
          pytest -m "not integration" tests --junitxml=test-reports/junit.xml --cov=./influxdb_client_3 --cov-report xml:coverage.xml
    - save_cache:
        name: Saving Pip Cache
        key: pip-cache-v11-cimg/python:3.8-{{ checksum "setup.py" }}
        paths:
        - .venv
        - ~/.cache/pip
        - /usr/local/lib/site-python
        when: always
    - store_test_results:
        path: test-reports
    - run:
        name: Collecting coverage reports
        command: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
          curl -s https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
          gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
          shasum -a 256 -c codecov.SHA256SUM
          chmod +x ./codecov
          ./codecov
  check-twine:
    docker:
    - image: cimg/python:3.8
      environment:
        PIPENV_VENV_IN_PROJECT: true
    steps:
    - checkout
    - run:
        name: Checks that the description will render correctly on PyPI.
        command: |
          pip install --upgrade pip
          pip install 'twine>=5.1,<6.1' --user
          python setup.py sdist bdist_wheel
          twine check dist/*
  test-integration:
    docker:
    - image: cimg/python:3.8
      environment:
        PIPENV_VENV_IN_PROJECT: true
    steps:
    - checkout
    - restore_cache:
        name: Restoring Pip Cache
        keys:
        - pip-cache-v11-cimg/python:3.8-{{ checksum "setup.py" }}
        - pip-cache-v11-cimg/python:3.8-
    - run:
        name: Running tests
        command: |
          python --version
          mkdir test-reports || true
          pip install . --user
          pip install .\[dataframe\] --user
          pip install .\[test\] --user
          pytest -m "integration" tests --junitxml=test-reports/junit.xml --cov=./influxdb_client_3 --cov-report xml:coverage.xml
    - save_cache:
        name: Saving Pip Cache
        key: pip-cache-v11-cimg/python:3.8-{{ checksum "setup.py" }}
        paths:
        - .venv
        - ~/.cache/pip
        - /usr/local/lib/site-python
        when: always
    - store_test_results:
        path: test-reports
    - run:
        name: Collecting coverage reports
        command: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
          curl -s https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
          gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
          shasum -a 256 -c codecov.SHA256SUM
          chmod +x ./codecov
          ./codecov
  test-3.9:
    docker:
    - image: cimg/python:3.9
      environment:
        PIPENV_VENV_IN_PROJECT: true
    steps:
    - checkout
    - restore_cache:
        name: Restoring Pip Cache
        keys:
        - pip-cache-v11-cimg/python:3.9-{{ checksum "setup.py" }}
        - pip-cache-v11-cimg/python:3.9-
    - run:
        name: Running tests
        command: |
          python --version
          mkdir test-reports || true
          pip install . --user
          pip install .\[dataframe\] --user
          pip install .\[test\] --user
          pytest -m "not integration" tests --junitxml=test-reports/junit.xml --cov=./influxdb_client_3 --cov-report xml:coverage.xml
    - save_cache:
        name: Saving Pip Cache
        key: pip-cache-v11-cimg/python:3.9-{{ checksum "setup.py" }}
        paths:
        - .venv
        - ~/.cache/pip
        - /usr/local/lib/site-python
        when: always
    - store_test_results:
        path: test-reports
    - run:
        name: Collecting coverage reports
        command: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
          curl -s https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
          gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
          shasum -a 256 -c codecov.SHA256SUM
          chmod +x ./codecov
          ./codecov
  test-3.10:
    docker:
    - image: cimg/python:3.10
      environment:
        PIPENV_VENV_IN_PROJECT: true
    steps:
    - checkout
    - restore_cache:
        name: Restoring Pip Cache
        keys:
        - pip-cache-v11-cimg/python:3.10-{{ checksum "setup.py" }}
        - pip-cache-v11-cimg/python:3.10-
    - run:
        name: Running tests
        command: |
          python --version
          mkdir test-reports || true
          pip install . --user
          pip install .\[dataframe\] --user
          pip install .\[test\] --user
          pytest -m "not integration" tests --junitxml=test-reports/junit.xml --cov=./influxdb_client_3 --cov-report xml:coverage.xml
    - save_cache:
        name: Saving Pip Cache
        key: pip-cache-v11-cimg/python:3.10-{{ checksum "setup.py" }}
        paths:
        - .venv
        - ~/.cache/pip
        - /usr/local/lib/site-python
        when: always
    - store_test_results:
        path: test-reports
    - run:
        name: Collecting coverage reports
        command: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
          curl -s https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
          gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
          shasum -a 256 -c codecov.SHA256SUM
          chmod +x ./codecov
          ./codecov
  test-3.13:
    docker:
    - image: cimg/python:3.13
      environment:
        PIPENV_VENV_IN_PROJECT: true
    steps:
    - checkout
    - restore_cache:
        name: Restoring Pip Cache
        keys:
        - pip-cache-v11-cimg/python:3.13-{{ checksum "setup.py" }}
        - pip-cache-v11-cimg/python:3.13-
    - run:
        name: Running tests
        command: |
          python --version
          mkdir test-reports || true
          pip install . --user
          pip install .\[dataframe\] --user
          pip install .\[test\] --user
          pytest -m "not integration" tests --junitxml=test-reports/junit.xml --cov=./influxdb_client_3 --cov-report xml:coverage.xml
    - save_cache:
        name: Saving Pip Cache
        key: pip-cache-v11-cimg/python:3.13-{{ checksum "setup.py" }}
        paths:
        - .venv
        - ~/.cache/pip
        - /usr/local/lib/site-python
        when: always
    - store_test_results:
        path: test-reports
    - run:
        name: Collecting coverage reports
        command: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
          curl -s https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
          gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
          shasum -a 256 -c codecov.SHA256SUM
          chmod +x ./codecov
          ./codecov
  test-3.12:
    docker:
    - image: cimg/python:3.12
      environment:
        PIPENV_VENV_IN_PROJECT: true
    steps:
    - checkout
    - restore_cache:
        name: Restoring Pip Cache
        keys:
        - pip-cache-v11-cimg/python:3.12-{{ checksum "setup.py" }}
        - pip-cache-v11-cimg/python:3.12-
    - run:
        name: Running tests
        command: |
          python --version
          mkdir test-reports || true
          pip install . --user
          pip install .\[dataframe\] --user
          pip install .\[test\] --user
          pytest -m "not integration" tests --junitxml=test-reports/junit.xml --cov=./influxdb_client_3 --cov-report xml:coverage.xml
    - save_cache:
        name: Saving Pip Cache
        key: pip-cache-v11-cimg/python:3.12-{{ checksum "setup.py" }}
        paths:
        - .venv
        - ~/.cache/pip
        - /usr/local/lib/site-python
        when: always
    - store_test_results:
        path: test-reports
    - run:
        name: Collecting coverage reports
        command: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
          curl -s https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
          gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
          shasum -a 256 -c codecov.SHA256SUM
          chmod +x ./codecov
          ./codecov
  check-code-style:
    docker:
    - image: cimg/python:3.8
      environment:
        PIPENV_VENV_IN_PROJECT: true
    steps:
    - checkout
    - run:
        name: Checks style consistency of setup.py.
        command: |
          pip install flake8 --user
          flake8 setup.py
    - run:
        name: Checks style consistency across sources.
        command: |
          pip install flake8 --user
          flake8 influxdb_client_3/
    - run:
        name: Checks style consistency across tests.
        command: |
          pip install flake8 --user
          flake8 tests/
    - run:
        name: Checks style consistency across examples.
        command: |
          pip install flake8 --user
          flake8 Examples/
workflows:
  version: 2
  build:
    jobs:
    - check-code-style
    - check-twine
    - test-3.8
    - test-3.9
    - test-3.10
    - test-3.11
    - test-3.12
    - test-3.13
    - test-integration:
        requires:
        - test-3.8
        - test-3.9
        - test-3.10
        - test-3.11
        - test-3.12
        - test-3.13
        upstream:
          test-3.8:
          - success
          test-3.9:
          - success
          test-3.10:
          - success
          test-3.11:
          - success
          test-3.12:
          - success
          test-3.13:
          - success
